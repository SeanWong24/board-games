/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppChat {
        "messageList": {
            nickname: string;
            message: string;
        }[];
        "sendMessage": (message: string) => void;
        "updateReadMessageCount": (count: number) => void;
    }
    interface AppGame {
    }
    interface AppHome {
        "appendMessage": (message: {
            nickname: string;
            message: string;
        }) => void;
        "claimHost": (isHost: boolean) => void;
        "connectToPeer": (peerId: string) => void;
        "nickname": string;
        "peerId": string;
        "updateNickname": (nickname: string) => void;
    }
    interface AppRoot {
    }
    interface AppTabs {
        "unreadMessageCount": number;
    }
}
declare global {
    interface HTMLAppChatElement extends Components.AppChat, HTMLStencilElement {
    }
    var HTMLAppChatElement: {
        prototype: HTMLAppChatElement;
        new (): HTMLAppChatElement;
    };
    interface HTMLAppGameElement extends Components.AppGame, HTMLStencilElement {
    }
    var HTMLAppGameElement: {
        prototype: HTMLAppGameElement;
        new (): HTMLAppGameElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTabsElement extends Components.AppTabs, HTMLStencilElement {
    }
    var HTMLAppTabsElement: {
        prototype: HTMLAppTabsElement;
        new (): HTMLAppTabsElement;
    };
    interface HTMLElementTagNameMap {
        "app-chat": HTMLAppChatElement;
        "app-game": HTMLAppGameElement;
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
        "app-tabs": HTMLAppTabsElement;
    }
}
declare namespace LocalJSX {
    interface AppChat {
        "messageList"?: {
            nickname: string;
            message: string;
        }[];
        "sendMessage"?: (message: string) => void;
        "updateReadMessageCount"?: (count: number) => void;
    }
    interface AppGame {
    }
    interface AppHome {
        "appendMessage"?: (message: {
            nickname: string;
            message: string;
        }) => void;
        "claimHost"?: (isHost: boolean) => void;
        "connectToPeer"?: (peerId: string) => void;
        "nickname"?: string;
        "peerId"?: string;
        "updateNickname"?: (nickname: string) => void;
    }
    interface AppRoot {
    }
    interface AppTabs {
        "unreadMessageCount"?: number;
    }
    interface IntrinsicElements {
        "app-chat": AppChat;
        "app-game": AppGame;
        "app-home": AppHome;
        "app-root": AppRoot;
        "app-tabs": AppTabs;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-chat": LocalJSX.AppChat & JSXBase.HTMLAttributes<HTMLAppChatElement>;
            "app-game": LocalJSX.AppGame & JSXBase.HTMLAttributes<HTMLAppGameElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-tabs": LocalJSX.AppTabs & JSXBase.HTMLAttributes<HTMLAppTabsElement>;
        }
    }
}
